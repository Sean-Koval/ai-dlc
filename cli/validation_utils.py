from typing import Optional
from .llm_client import GeminiClient

def ensure_validation_section(response_text: str, client: GeminiClient, max_retries: int = 2) -> str:
    """
    Ensures that the response text from the LLM contains a VALIDATION section.

    If the section is missing, it will re-ask the LLM to provide it, up to a maximum number of retries.

    Args:
        response_text: The text generated by the LLM.
        client: An instance of the LLM client to make further requests.
        max_retries: The maximum number of times to re-ask for the validation section.

    Returns:
        The response text, potentially corrected to include the validation section.
    """
    for _ in range(max_retries):
        if "VALIDATION:" in response_text:
            return response_text
        
        # If the marker is not found, construct a follow-up prompt
        follow_up_prompt = (
            f"The previous response is missing the 'VALIDATION:' section. "
            f"Please review the following text and add a 'VALIDATION:' section that lists the key fields to confirm.\n\n"
            f"Original Text:\n---\n{response_text}"
        )
        
        # Re-ask the LLM
        response_text = client.generate(prompt=follow_up_prompt)

    # If max_retries is reached and the section is still missing, raise an error
    if "VALIDATION:" not in response_text:
        raise ValueError(
            f"Failed to obtain a VALIDATION section after {max_retries} retries."
        )

    return response_text
